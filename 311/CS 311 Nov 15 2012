CS 311 Notes @ 11/15/2012

EXAMPLE:
	
	PDA for L = {wcw^R | w \element {a,b}*}

			aab c baa
		----> (read left to right)

		Need stack to keep track of symbols

		D = \delta
		e = \epsilon

		D(P0, e, Z0) = (P0, e) // required for wcw^R where |w| = 0

		D(P0, a, Z0) = (P0,Z0)
		D(P0, b, Z0) = (P0, BZ0)
		D(P0, a, A)  = (P0, AA)
		D(P0, a, B)  = (P0, AB)
		D(P0, b, A)  = (P0, BA)
		D(P0, b, B)  = (P0, BB)
		D(P0, c, A)  = (P1, A)
		D(P0, c, B)  = (P1, B)
		D(P1, a, A)  = (P1, e)  // match a to same A 
		D(P1, b, B)  = (P1, e)  // match b to same B
		D(P1, e, Z0) = (P1, e)  // pop last


	E.g. L = {ww^R | w \element {a,b}^+}  

		abbbba  // requires power of nondeterminism 

		D(P0, a, Z0) = (P0, AZ0)
		D(P0, b, Z0) = (P0, BZ0)
		D(P0, a, A)  = (P0, AA)  // possible position to turn around (a with A)
		D(P0, a, B)  = (P0, AB)
		D(P0, b, A)  = (P0, BA)
		D(P0, b, B)  = (P0, BB) // possible position to run around (b with B)
		D(P1, a, A)  = (P0, e)
		D(P1, b, B)  = (P0, e)
		D(P1, e, Z0) = (P1, e) // accept L

	E.g. {a^n b^2n | n > 0}

		D(P0, a, Z0)  = (P0, AAZ0)
		D(P0, a, A)   = (P0, AAA)  // push 2 as for every input a
		D(P0, b, A)   = (P1, e)
		D(P1, b, A)   = (P1, e)
		D(P1, e, Z0)  = (P1, e)    // accept L 

		OR we can pop out 1 a for 2 b's as input

		D(P0, a, Z0) = (P0, AZ0)
		D(P0, a, A)  = (P0, AA)
		D(P0, b, A)  = (P1, A) // push it back, not ready to pop
		D(P1, b, A)  = (P2, e) // pop and go to P2
		D(P2, b, A)  = (P1, A) 
		D(P2, e, Z0) = (P2, e) // accept L 

		if we changed it to n>= 0

		add
		D(P0, e, Z0) = (P0, e) // accept empty string


	E.g. {a^i b^j | i > j , i,j >= 0}

	i > j => no empty string in language

	must be more a's than b's essentially

		a
		aab
		aaaaaaaaaaaa...aaabbbb

		push all A's , pop at B , pop rest of As from new state 

		// add to accept j = 0, aaaa, no b
		D(P0, e, A)  = (P2, e)  // this let's us pop the rest of the As

		D(P0, a, Z0) = (P0, AZ0)
		D(P0, a, A)  = (P0, AA)
		D(P0, b, A)  = (P1, e) // change state and pop
		D(P1, b, A)  = (P1, e) // continous pop
		D(P1, e, A)  = (P2, e) // pop at empty
		D(P2, e, A)  = (P2, e)
		D(P2, e, Z0) = (P2, e) // accept

	INCLASS EXERCISES

		1. L = {a^i b^j c^j d^i | i,j >0}

			Does not accept empty string

			D(P0, a, Z0) = (P0, AZ0) 
			D(P0, a, A)  = (P0, AA) // push all As
			D(P0, b, A)  = (P1, BA) // push B from A
			D(P1, b, B)  = (P1, BB) // push all Bs
			D(P1, c, B)  = (P2, e)  // pop b
			D(P2, c, B)  = (P2, e)  // pop all bs
			D(P2, d, A)  = (P3, e)  // pop A from D
			D(P3, d, A)  = (P3, e)  // pop all D-A matches
			D(P3, e, Z0) = (P3, e)  // accept L




		2. L = {a^n b^(n+2) | n >= 0}

			2 more b's than a's 
				try: Push 1 a with the first B

				aaa bbbbb

			D(P0, a, Z0) = (P0, AZ0)
			D(P0, a, A)  = (P0, AA)
			D(P0, b, A)  = (P1, AA) // consume 1st B and push A
			D(P1, b, A)  = (P1, e) // pop all As
			D(P1, e, Z0) = (P1, e) // accept L 

			D(P0, b, Z0) = (P1, AZ0) // special case

		3. L = {a^i b^j | i < j, i,j, >= 0}

			More a's than b's , can not accept empty, can accept b^+ 

			D(P0, b, Z0) = (P1, e)  // accept only b's 
			D(P0, a, Z0) = (P0, AZ0)
			D(P0, a, A)  = (P0, AA)
			D(P0, b, A)  = (P1, e) // pop A 
			D(P1, b, A)  = (P1, e) // continous pop A
			D(P1, b, Z0) = (P2, Z0) // don't pop, go to next
			D(P2, b, Z0) = (P2, Z0) // consume rest of b's
			D(P2, e, Z0) = (P2, e) // accept

			

		4. L = {x \element {0,1}* | N_0(x) = N_1(x)} // order doesn't matter

			accepts empty string

			D(P0, 0, Z0) = (P1, 0Z0) 
		    D(P1, 0, 0)  = (P1, 00)
		    D(P1, 1, 0)  = (P1, e)
		    D(P1, e, Z0) = (P1, e) // accept
		    D(P1, 0, Z0) = (P1, 0Z0) // loop
		    D(P1, 1, Z0) = (P2, 1Z0) // branch

		    D(P0, 1, Z0) = (P2, 1Z0)
		    D(P2, 1, 1)  = (P2, 11)
		    D(P2, 0, 1)  = (P2, e)
		    D(P2, e, Z0) = (P2, e) // accept 
		    D(P2, 1, Z0) = (P2, 1Z0) // loop
		    D(P2, 0, Z0) = (P1, 0Z0) //


		    OR:

		    D(P0, 0, Z0) = (P0, 0Z0)
		    D(P0, 1, Z0) = (P0, 1Z0)
		    D(P1, 1, 1)  = (P0, 11)
		    D(P1, 0, 0)  = (P0, 00)
		    D(P1, 0, 1)  = (P0, e)
		    D(P1, 1, 0)  = (P0, e)
		    ...
		    clear where to go 